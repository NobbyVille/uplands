#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Proc::Daemon;
use Proc::PID::File;
use Log::Log4perl qw(get_logger);

my $foreground = 0;
GetOptions ("foreground"  => \$foreground);

my $interval = 5;           # waiting time (in seconds)

my $conf = q(
    log4perl.appender.Logfile          = Log::Log4perl::Appender::File
    log4perl.appender.Logfile.filename = /var/log/flud.log
    log4perl.appender.Logfile.mode     = write
    log4perl.appender.Logfile.layout   = Log::Log4perl::Layout::PatternLayout
    log4perl.appender.Logfile.layout.ConversionPattern = %d %-5p - %m{chomp}%n

    log4perl.appender.Screen           = Log::Log4perl::Appender::Screen
    log4perl.appender.Screen.stderr    = 0
    log4perl.appender.Screen.layout    = Log::Log4perl::Layout::SimpleLayout
);

if ($foreground) {
    $conf .= 'log4perl.rootlogger = DEBUG, Screen';
}
else {
    die "Must run as root to daemonize, or with --foreground" unless $< == 0;
    # Fork and detach from the parent process
    eval { Proc::Daemon::Init(); };
    die "Unable to start daemon: $@" if ($@);
    # Get a PID file
    die ("Already running as daemon, exiting this instance")
        if Proc::PID::File->running();
    $conf .= 'log4perl.rootlogger = DEBUG, Logfile';
}

# Start log
Log::Log4perl::init( \$conf );
my $log = Log::Log4perl->get_logger('main');
$log->info ("starting");

# Setup signal handlers so that we have time to cleanup before shutting down
my $keep_going = 1;
$SIG{HUP}  = sub { $log->info ("caught SIGHUP: exiting gracefully");  $keep_going = 0; };
$SIG{INT}  = sub { $log->info ("caught sigint: exiting gracefully");  $keep_going = 0; };
$SIG{QUIT} = sub { $log->info ("caught sigquit: exiting gracefully"); $keep_going = 0; };
$SIG{TERM} = sub { $log->info ("caught SIGTERM: exiting gracefully"); $keep_going = 0; };

# enter main loop
while ($keep_going) {
    # here the action you want to perform every $interval seconds
    $log->debug ("going");
    sleep ($interval);
}

# Mark a clean exit in the log
$log->info ("stopping");
